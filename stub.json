{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"me puedes explicar de que trata esta función de Python?\n\nif len(lista_planos) == 0:\n    print('No se han ingresado archivos para validar')\nelse:\n    df_objetos=cargaEtiquetasSAP()\n    # Iteramos sobre los archivos de cada plano/piso\n    for nom_plano in lista_planos:\n        try:\n            print('Procesando %s' %(nom_plano))\n            nom_archivo=nom_plano.split('/')[-1].split('.')[0]\n            # Borramos el contenido de la carpeta de trabajo\n            borraWD(carpeta_temp_planos)\n            # Descargamos el archivo desde bucket para la lectura con Fiona ***(FN:230116) Revisar como leer desde bucket\n            archivo_local=descargaPlano(bucket_name,nom_plano,carpeta_trabajo)\n            # Validamos la capa\n            [gdf_final,score_final]=valida_plano(archivo_local,df_capas,df_objetos,carpeta_validacion)\n            # Si el score supera la tolerancia, se almacena el shapefile ## ToDo: agregar notificación\n            print(\"Score de plano %.4f\" %score_final)\n            if score_final>criterio_guardado:\n                print(\"Guardando %s\" %nom_archivo)\n                # Guardamos el archivo de shapefile en bucket\n                borraWD(carpeta_temp_planos) # Eliminamos primero todos los arhivos locales\n                saveSHP(gdf_final,archivo_local.replace('dxf','shp'),'w') # Escribimos todos los archivos de SHP\n                # Enviamos os shapefile al buket\n                enviaSHPBucket(bucket_name,blob_shp,carpeta_temp_planos)\n                borraWD(carpeta_temp_planos) # Volvemos a eliminar el WD\n            # Liberamos memoria\n            #for name, size in sorted(((name, sys.getsizeof(value)) for name, value in list(locals().items())),\n            #                         key= lambda x: -x[1])[:10]:print(\"{:>30}: {:>8}\".format(name, sizeof_fmt(size)))\n            del(gdf_final)\n            gc.collect()\n            # Respaldamos el plano ingresado en el bucket\n            respaldaPlano(bucket_name,nom_plano,carpeta_trabajo)\n        except Exception as e:\n            print('***Error procesando archivo %s***' %(nom_plano))\n            print(str(e))","md5":"f3085fa1f7b84fee9699fa399b20b4a4"}]}